(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{776:function(s,n,t){"use strict";t.r(n);var e=t(17),a=Object(e.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("ul",[t("li",[t("p",[t("a",{attrs:{href:"https://www.coder.work/article/51291",target:"_blank",rel:"noopener noreferrer"}},[s._v("在Flutter中居中ListView"),t("OutboundLink")],1)])]),s._v(" "),t("li",[t("h3",{attrs:{id:"固定式头部-widget"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#固定式头部-widget"}},[s._v("#")]),s._v(" 固定式头部 widget")]),s._v(" "),t("p",[s._v("列表中我们总是有"),t("code",[s._v("固定头部")]),s._v("这个需求，头部 view 不顺着列表滚动。这里说一个最简便的实现方法："),t("code",[s._v("column + expanded")]),s._v("。Column 继承自 Flex，可以自动实现 widget 长度适应，Expanded 可以自动拉伸组件的大小，所以用它俩来做很适合")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('  Widget build(BuildContext context) {\n    // TODO: implement build\n    return Column(\n      children: <Widget>[\n        Text("我是头部"),\n        Expanded(\n          child: ListView.builder(\n            padding: EdgeInsets.all(20),\n            physics: BouncingScrollPhysics(),\n            cacheExtent: 10,\n            itemCount: 50,\n            itemExtent: 35,\n            controller: scrollController,\n            itemBuilder: (context, index) {\n              return Container(\n                alignment: Alignment.center,\n                child: Text("item:${index}"),\n              );\n            },\n          ),\n        ),\n      ],\n    );\n  }\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("["),t("a",{attrs:{href:"https://www.thinbug.com/q/55392459",target:"_blank",rel:"noopener noreferrer"}},[s._v("将ListView的最后一个元素固定到屏幕底部"),t("OutboundLink")],1),s._v("]")])])]),s._v(" "),t("h4",{attrs:{id:"listtile-属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#listtile-属性"}},[s._v("#")]),s._v(" ListTile 属性")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("this.leading,              // item 前置图标\nthis.title,                // item 标题\nthis.subtitle,             // item 副标题\nthis.trailing,             // item 后置图标\nthis.isThreeLine = false,  // item 是否三行显示\nthis.dense,                // item 直观感受是整体大小\nthis.contentPadding,       // item 内容内边距\nthis.enabled = true,\nthis.onTap,                // item onTap 点击事件\nthis.onLongPress,          // item onLongPress 长按事件\nthis.selected = false,     // item 是否选中状态\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h3",{attrs:{id:"listview-builder"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#listview-builder"}},[s._v("#")]),s._v(" ListView builder")]),s._v(" "),t("p",[t("strong",[s._v("builder")]),s._v(" 顾名思义 构造 可以非常方便的构建我们自己定义的"),t("strong",[s._v("child")]),s._v("布局，所以在"),t("strong",[s._v("Flutter")]),s._v("中非常的常用。")]),s._v(" "),t("h4",{attrs:{id:"builder属性详细介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#builder属性详细介绍"}},[s._v("#")]),s._v(" builder属性详细介绍")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("   //设置滑动方向 Axis.horizontal 水平  默认 Axis.vertical 垂直\n        scrollDirection: Axis.vertical,\n        //内间距\n        padding: EdgeInsets.all(10.0),\n        //是否倒序显示 默认正序 false  倒序true\n        reverse: false,\n        //false，如果内容不足，则用户无法滚动 而如果[primary]为true，它们总是可以尝试滚动。\n        primary: true,\n        //确定每一个item的高度 会让item加载更加高效\n        itemExtent: 50.0,\n        //内容适配\n        shrinkWrap: true,\n        //item 数量\n        itemCount: list.length,\n        //滑动类型设置\n        physics: new ClampingScrollPhysics(),\n         //cacheExtent  设置预加载的区域 \n         cacheExtent: 30.0, \n        //滑动监听\n//        controller ,\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br")])]),t("h4",{attrs:{id:"分析几个比较难理解的属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分析几个比较难理解的属性"}},[s._v("#")]),s._v(" 分析几个比较难理解的属性")]),s._v(" "),t("p",[t("strong",[s._v("shrinkWrap")]),s._v("特别推荐\n"),t("strong",[s._v("child")]),s._v(" 高度会适配 "),t("strong",[s._v("item")]),s._v("填充的内容的高度,我们非常的不希望"),t("strong",[s._v("child")]),s._v("的高度固定，因为这样的话，如果里面的内容超出就会造成布局的溢出。\n"),t("strong",[s._v("shrinkWrap")]),s._v("多用于嵌套"),t("strong",[s._v("listView")]),s._v("中 内容大小不确定 比如 垂直布局中 先后放入文字 "),t("strong",[s._v("listView")]),s._v(" （需要"),t("strong",[s._v("Expend")]),s._v("包裹否则无法显示无穷大高度 但是需要确定"),t("strong",[s._v("listview")]),s._v("高度 "),t("strong",[s._v("shrinkWrap")]),s._v("使用内容适配不会有这样的影响）")]),s._v(" "),t("p",[t("strong",[s._v("primary")]),s._v(" "),t("strong",[s._v("If the [primary] argument is true, the [controller] must be null.")]),s._v("\n在构造中默认是false 它的意思就是为主的意思，"),t("strong",[s._v("primary")]),s._v("为true时，我们的"),t("strong",[s._v("controller")]),s._v(" 滑动监听就不能使用了")]),s._v(" "),t("p",[t("strong",[s._v("physics")]),s._v("\n这个属性几个滑动的选择\n"),t("strong",[s._v("AlwaysScrollableScrollPhysics")]),s._v("() 总是可以滑动\n"),t("strong",[s._v("NeverScrollableScrollPhysics")]),s._v("禁止滚动\n"),t("strong",[s._v("BouncingScrollPhysics")]),s._v(" 内容超过一屏 上拉有回弹效果\n"),t("strong",[s._v("ClampingScrollPhysics")]),s._v(" 包裹内容 不会有回弹")]),s._v(" "),t("p",[t("strong",[s._v("cacheExtent")]),s._v("\n这个属性的意思就是预加载的区域\n设置预加载的区域 "),t("strong",[s._v("cacheExtent")]),s._v(" 强制设置为了 0.0，从而关闭了“预加载”")]),s._v(" "),t("p",[t("strong",[s._v("controller")]),s._v("\n滑动监听，我们多用于上拉加载更多，通过监听滑动的距离来执行操作。")])])}),[],!1,null,null,null);n.default=a.exports}}]);