(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{678:function(e,t,a){e.exports=a.p+"assets/img/vue-life-cycle.e18a5fbc.jpg"},923:function(e,t,a){"use strict";a.r(t);var r=a(17),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"vue-的生命周期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vue-的生命周期"}},[e._v("#")]),e._v(" Vue 的生命周期")]),e._v(" "),r("p",[e._v("[TOC]")]),e._v(" "),r("p",[r("img",{attrs:{src:a(678),alt:"life-cycle"}})]),e._v(" "),r("h2",{attrs:{id:"一、vue的生命周期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一、vue的生命周期"}},[e._v("#")]),e._v(" 一、Vue的生命周期")]),e._v(" "),r("h3",{attrs:{id:"_1-1-beforecreate-初始化界面前"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-beforecreate-初始化界面前"}},[e._v("#")]),e._v(" 1.1 beforeCreate（初始化界面前）")]),e._v(" "),r("h4",{attrs:{id:"_1-1-1-new-vue"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-new-vue"}},[e._v("#")]),e._v(" 1.1.1 new Vue()")]),e._v(" "),r("div",{staticClass:"language-js line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 开始创建一个Vue的实例对象")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" vm "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Vue")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br")])]),r("h4",{attrs:{id:"_1-1-2-init-events-lifecycle"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-2-init-events-lifecycle"}},[e._v("#")]),e._v(" 1.1.2 Init(Events & Lifecycle)")]),e._v(" "),r("ul",[r("li",[e._v("初始化一个空的Vue实例对象，此时只有默认的一些生命周期和默认事件，其余都未创建。")])]),e._v(" "),r("h4",{attrs:{id:"_1-1-3-beforecreate"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-3-beforecreate"}},[e._v("#")]),e._v(" 1.1.3 beforeCreate")]),e._v(" "),r("ul",[r("li",[e._v("Vue实例挂载的el和数据对象data都是undefined，还未初始化。")])]),e._v(" "),r("h3",{attrs:{id:"_1-2-created-初始化界面后"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-created-初始化界面后"}},[e._v("#")]),e._v(" 1.2 created（初始化界面后）")]),e._v(" "),r("h4",{attrs:{id:"_1-2-1-init-injections-reactivity"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-init-injections-reactivity"}},[e._v("#")]),e._v(" 1.2.1 Init(injections & reactivity)")]),e._v(" "),r("h4",{attrs:{id:"_1-2-2-created"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2-created"}},[e._v("#")]),e._v(" 1.2.2 created")]),e._v(" "),r("ul",[r("li",[e._v("完成了data的数据和methods的方法初始化，el还未初始化。")])]),e._v(" "),r("h3",{attrs:{id:"_1-3-beforemount-渲染dom前"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-beforemount-渲染dom前"}},[e._v("#")]),e._v(" 1.3 beforeMount（渲染dom前）")]),e._v(" "),r("ul",[r("li",[e._v("vue实例的"),r("code",[e._v("$el")]),e._v("和"),r("code",[e._v("data")]),e._v("都初始化了, 相关的render函数首次被调用。实例已完成以下的配置：编译模板，把data里面的数据和模板生成html。")]),e._v(" "),r("li",[e._v("注意此时还没有挂载html到页面上。")])]),e._v(" "),r("h3",{attrs:{id:"_1-4-mounted-渲染dom后"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-mounted-渲染dom后"}},[e._v("#")]),e._v(" 1.4 mounted（渲染dom后）")]),e._v(" "),r("h4",{attrs:{id:"_1-4-1-create-vm-el-and-replace-el-with-it"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-1-create-vm-el-and-replace-el-with-it"}},[e._v("#")]),e._v(' 1.4.1 Create vm.$el and replace "el" with it')]),e._v(" "),r("ul",[r("li",[e._v("将内存中编译好的模板，真实的替换到浏览器的页面中。")])]),e._v(" "),r("h4",{attrs:{id:"_1-4-2-mounted"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-2-mounted"}},[e._v("#")]),e._v(" 1.4.2 mounted")]),e._v(" "),r("ul",[r("li",[e._v("在"),r("code",[e._v("el")]),e._v(" 被新创建的 "),r("code",[e._v("vm.$el")]),e._v("替换，并挂载到实例上去之后调用。")]),e._v(" "),r("li",[e._v("此过程中进行ajax交互。")])]),e._v(" "),r("h3",{attrs:{id:"_1-5-beforeupdate-更新数据前"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-beforeupdate-更新数据前"}},[e._v("#")]),e._v(" 1.5 beforeUpdate（更新数据前）")]),e._v(" "),r("ul",[r("li",[e._v("在数据更新之前调用，发生在虚拟DOM重新渲染和打补丁之前。")]),e._v(" "),r("li",[e._v("可以在该钩子中进一步地更改状态，不会触发附加的重渲染过程。")])]),e._v(" "),r("h3",{attrs:{id:"_1-6-updated-更新数据后"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-updated-更新数据后"}},[e._v("#")]),e._v(" 1.6 updated（更新数据后）")]),e._v(" "),r("ul",[r("li",[e._v("在由于数据更改导致的虚拟DOM重新渲染和打补丁之后调用。")]),e._v(" "),r("li",[e._v("调用时，组件DOM已经更新，所以可以执行依赖于DOM的操作。")]),e._v(" "),r("li",[e._v("然而在大多数情况下，应该避免在此期间更改状态，因为这可能会导致更新无限循环。")]),e._v(" "),r("li",[e._v("该钩子在服务器端渲染期间不被调用。")])]),e._v(" "),r("h3",{attrs:{id:"_1-7-beforedestroy-销毁组件前"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-beforedestroy-销毁组件前"}},[e._v("#")]),e._v(" 1.7 beforeDestroy（销毁组件前）")]),e._v(" "),r("ul",[r("li",[e._v("在实例销毁之前调用。实例仍然完全可用。")])]),e._v(" "),r("h3",{attrs:{id:"_1-8-destroyed-销毁组件后"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-8-destroyed-销毁组件后"}},[e._v("#")]),e._v(" 1.8 destroyed（销毁组件后）")]),e._v(" "),r("ul",[r("li",[e._v("在实例销毁之后调用。")]),e._v(" "),r("li",[e._v("调用后，所有的事件监听器会被移除，所有的子实例也会被销毁。")]),e._v(" "),r("li",[e._v("该钩子在服务器端渲染期间不被调用。")])]),e._v(" "),r("h2",{attrs:{id:"二、生命钩子"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二、生命钩子"}},[e._v("#")]),e._v(" 二、生命钩子")]),e._v(" "),r("h3",{attrs:{id:"_2-1-created"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-created"}},[e._v("#")]),e._v(" 2.1 created()")]),e._v(" "),r("ul",[r("li",[e._v("在创建vue对象时，当html渲染之前就触发；但是注意，全局vue.js不强制刷新或者重启时只创建一次，也就是说，created()只会触发一次；")])]),e._v(" "),r("h3",{attrs:{id:"_2-2-activated"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-activated"}},[e._v("#")]),e._v(" 2.2 activated()")]),e._v(" "),r("ul",[r("li",[e._v("在vue对象存活的情况下，进入当前存在activated()函数的页面时，一进入页面就触发；可用于初始化页面数据等。")])]),e._v(" "),r("h2",{attrs:{id:"三、应用场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三、应用场景"}},[e._v("#")]),e._v(" 三、应用场景")]),e._v(" "),r("h3",{attrs:{id:"_3-1-在mounted获取dom元素时为undefined"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-在mounted获取dom元素时为undefined"}},[e._v("#")]),e._v(" 3.1 在mounted获取DOM元素时为undefined")]),e._v(" "),r("blockquote",[r("p",[e._v("参考链接：https://blog.csdn.net/qq_40542728/article/details/89358065")])]),e._v(" "),r("ul",[r("li",[r("p",[e._v("mounted 阶段，一般是用于发起后端请求，获取数据，配合路由钩子做一些事情。简单来说就是在 mounted 钩子中加载数据而已，加载回来的数据是不会在这个阶段更新到 DOM 中的。所以在 mounted 钩子中使用 $refs，如果 ref 是定位在有 v-if、v-for、v-show 的 DOM 节点中，返回来的只能是 undefined，因为在 mounted 阶段他们根本不存在。")])]),e._v(" "),r("li",[r("p",[e._v("Vue 实现响应式并不是数据发生变化之后 DOM 立即变化，而是按一定的策略进行 DOM 的更新。")]),e._v(" "),r("p",[e._v("$nextTick 是在下次 DOM 更新循环结束之后执行延迟回调，在修改数据之后使用 $nextTick，则可以在回调中获取更新后的 DOM。")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);