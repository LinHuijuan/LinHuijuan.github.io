(window.webpackJsonp=window.webpackJsonp||[]).push([[218],{891:function(t,s,a){"use strict";a.r(s);var r=a(17),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"typescript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typescript"}},[t._v("#")]),t._v(" TypeScript")]),t._v(" "),a("blockquote",[a("p",[t._v("官方文档：https://www.typescriptlang.org/zh/docs/ "),a("a",{attrs:{href:"https://www.typescriptlang.org/docs/handbook/typescript-tooling-in-5-minutes.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("TypeScript Tooling in 5 minutes"),a("OutboundLink")],1),t._v("\n阮一峰推荐的入门教程：https://ts.xcatliu.com/\n慕课网免费教程: "),a("a",{attrs:{href:"https://www.imooc.com/learn/1306",target:"_blank",rel:"noopener noreferrer"}},[t._v("2小时极速入门 TypeScript"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("使用原则：任何变量都声明类型、不到万不得已不要使用any，给你的对象声明接口。")])]),t._v(" "),a("h2",{attrs:{id:"一、为什么使用ts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、为什么使用ts"}},[t._v("#")]),t._v(" 一、为什么使用ts?")]),t._v(" "),a("blockquote",[a("p",[t._v("—更可靠：类型的定义和编译器的引入，可以避免JavaScript大多数runtime错误，更可靠，易维护； —更清晰：显式类型声明提升代码可读性，代码校验可以全部交给编译器负责； —更广泛：TypeScript是JavaScript的超集，可以在TypeScript代码中混合使用任何JavaScript库和代码。")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Js 是一门动态弱类型语言，对变量的类型非常宽容，而且不会在这些变量和它们的调用者间建立结构化的契约。")])]),t._v(" "),a("li",[a("p",[t._v("使用 ts 的好处：")]),t._v(" "),a("ul",[a("li",[t._v("接口定义代替文档")]),t._v(" "),a("li",[t._v("IDE能够提高开发效率，降低维护成本")]),t._v(" "),a("li",[t._v("重塑“类型思维”")])])])]),t._v(" "),a("h2",{attrs:{id:"二、什么是ts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、什么是ts"}},[t._v("#")]),t._v(" 二、什么是ts?")]),t._v(" "),a("blockquote",[a("p",[t._v("JavaScript 语言的超集。")])]),t._v(" "),a("h3",{attrs:{id:"_2-1-类型检查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-类型检查"}},[t._v("#")]),t._v(" 2.1 类型检查")]),t._v(" "),a("p",[t._v("ts 会在编译代码时进行严格的静态检查，这意味着可以在编码阶段发现可能存在的隐患，而不必把它们带到线上。")]),t._v(" "),a("h3",{attrs:{id:"_2-2-语言扩展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-语言扩展"}},[t._v("#")]),t._v(" 2.2 语言扩展")]),t._v(" "),a("p",[t._v("ts 会包括来自 ES6 和未来提案中的特性；也会从其他语言借鉴某些特性，比如接口和抽象类。")]),t._v(" "),a("h3",{attrs:{id:"_2-3-工具属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-工具属性"}},[t._v("#")]),t._v(" 2.3 工具属性")]),t._v(" "),a("p",[t._v("ts 能够借助 tsc 或 babel 编译成标准 js,，无需任何运行时的额外开销。")]),t._v(" "),a("h3",{attrs:{id:"三、项目管理trick"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、项目管理trick"}},[t._v("#")]),t._v(" 三、项目管理trick")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" init \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --save-dev lite-server // 轻量级服务器 \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run lite-server // 实现tsc编译完成后，不需要刷新浏览器，就可以显示最新代码\n\n// 执行文件\ntsc index.ts\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" index.js\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("ol",[a("li",[t._v("正常情况下， node 不可以直接运行 .ts 文件；")]),t._v(" "),a("li",[t._v("但是，如果你写的 .ts 文件中代码全部是原生 js 代码，没有任何 ts 特有的功能，就可以当作 .js 文件正常执行!")])])])}),[],!1,null,null,null);s.default=e.exports}}]);