(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{669:function(t,s,a){t.exports=a.p+"assets/img/async-load.c33528de.jpg"},670:function(t,s,a){t.exports=a.p+"assets/img/cache.04404d9f.jpg"},671:function(t,s,a){t.exports=a.p+"assets/img/CDN.3f61e285.jpg"},889:function(t,s,a){"use strict";a.r(s);var e=a(17),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"页面性能优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#页面性能优化"}},[t._v("#")]),t._v(" 页面性能优化")]),t._v(" "),e("p",[t._v("可参考："),e("a",{attrs:{href:"https://link.juejin.im/?target=http%3A%2F%2Fwww.cnblogs.com%2Fxianyulaodi%2Fp%2F5755079.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("雅虎前端优化的35条军规"),e("OutboundLink")],1)]),t._v(" "),e("blockquote",[e("p",[t._v("降低请求量：合并资源，减少HTTP 请求数，minify / gzip 压缩，webP，lazyLoad。")])]),t._v(" "),e("blockquote",[e("p",[t._v("加快请求速度：预解析DNS，减少域名数，并行加载，CDN 分发。")])]),t._v(" "),e("blockquote",[e("p",[t._v("缓存：HTTP 协议缓存请求，离线缓存 manifest，离线数据缓存localStorage。")])]),t._v(" "),e("blockquote",[e("p",[t._v("渲染：JS/CSS优化，加载顺序，服务端渲染，pipeline。")])]),t._v(" "),e("blockquote",[e("ol",[e("li",[t._v("网络层面\n"),e("ul",[e("li",[t._v("请求过程的优化-HTTP请求优化(构建工具性能调优,Gzipd压缩原理,图片优化)")]),t._v(" "),e("li",[t._v("减少网络请求-本地存储(浏览器的缓存机制,离线存储技术)")])])]),t._v(" "),e("li",[t._v("渲染层面\n"),e("ul",[e("li",[t._v("服务端渲染的探索与实践")]),t._v(" "),e("li",[t._v("浏览器的渲染机制解析(CSS性能方案,JS性能方案)")]),t._v(" "),e("li",[t._v("DOM优化(事件循环与异步更新,回流与重绘)")]),t._v(" "),e("li",[t._v("首屏渲染提速(懒加载)")])])]),t._v(" "),e("li",[t._v("性能监测\n"),e("ul",[e("li",[t._v("可视化工具(Performance,LightHouse)")]),t._v(" "),e("li",[t._v("W3C性能API")])])])])]),t._v(" "),e("p",[t._v("[TOC]")]),t._v(" "),e("p",[t._v("提升页面性能优化的方法有哪些：")]),t._v(" "),e("ul",[e("li",[t._v("1、资源压缩合并，减少http请求")]),t._v(" "),e("li",[t._v("2、"),e("strong",[t._v("非核心代码异步加载")]),t._v(" --\x3e 异步加载的方式 --\x3e 异步加载的区别")])]),t._v(" "),e("p",[t._v("如果回答出"),e("code",[t._v("非核心代码异步加载")]),t._v("，就会层层深入。")]),t._v(" "),e("ul",[e("li",[t._v("3、利用浏览器缓存 --\x3e 缓存的分类 --\x3e 缓存的原理")])]),t._v(" "),e("p",[e("strong",[t._v("缓存")]),t._v("是所有性能优化的方式中最重要的一步。")]),t._v(" "),e("ul",[e("li",[t._v("4、使用CDN")])]),t._v(" "),e("p",[t._v("浏览器第一次打开页面时，缓存是起不了作用的。")]),t._v(" "),e("ul",[e("li",[t._v("5、DNS预解析")])]),t._v(" "),e("h2",{attrs:{id:"一、资源压缩合并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、资源压缩合并"}},[t._v("#")]),t._v(" 一、资源压缩合并")]),t._v(" "),e("blockquote",[e("p",[t._v("HTTP请求优化方向：")]),t._v(" "),e("ol",[e("li",[t._v("减少请求次数。")]),t._v(" "),e("li",[t._v("减少单次请求所花费的时间。")])]),t._v(" "),e("p",[t._v("即，资源的压缩和合并。")])]),t._v(" "),e("p",[t._v("参考链接："),e("a",{attrs:{href:"https://juejin.im/post/5b022bdf518825426d2d69fe",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://juejin.im/post/5b022bdf518825426d2d69fe"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("可以加快首次访问速度，减少http请求。")]),t._v(" "),e("p",[t._v("保护代码，降低代码的可读性。")]),t._v(" "),e("h3",{attrs:{id:"_1-1-html压缩"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-html压缩"}},[t._v("#")]),t._v(" 1.1 html压缩")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("压缩这些在文本文件中有意义，但是"),e("strong",[t._v("在HTML中不显示的字符")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("空格，制表符，换行符")]),t._v("，"),e("strong",[t._v("注释")])])])]),t._v(" "),e("li",[e("p",[t._v("压缩方式：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("nodejs提供了html-minifier工具")])]),t._v(" "),e("li",[e("p",[t._v("后端模板引擎渲染压缩")])])])])]),t._v(" "),e("h3",{attrs:{id:"_1-2-css压缩"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-css压缩"}},[t._v("#")]),t._v(" 1.2 CSS压缩")]),t._v(" "),e("ol",[e("li",[t._v("无效代码删除")]),t._v(" "),e("li",[t._v("css语义合并。")])]),t._v(" "),e("ul",[e("li",[t._v("压缩方式\n"),e("ul",[e("li",[t._v("使用html-minifier工具")]),t._v(" "),e("li",[t._v("使用clean-css对css压缩")])])])]),t._v(" "),e("h3",{attrs:{id:"_1-3-js压缩和混乱"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-js压缩和混乱"}},[t._v("#")]),t._v(" 1.3 JS压缩和混乱")]),t._v(" "),e("p",[t._v("js的压缩和混乱主要包括以下这几部分：")]),t._v(" "),e("ol",[e("li",[t._v("无效字符的删除")]),t._v(" "),e("li",[t._v("剔除注释")]),t._v(" "),e("li",[t._v("代码语义的缩减和优化")]),t._v(" "),e("li",[t._v("代码保护(代码逻辑变得混乱，降低代码的可读性，这点很重要)")])]),t._v(" "),e("ul",[e("li",[t._v("压缩方式\n"),e("ul",[e("li",[t._v("使用html-minifier工具")]),t._v(" "),e("li",[t._v("使用uglifyjs2对js进行压缩")])])])]),t._v(" "),e("h3",{attrs:{id:"_1-4-合并文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-合并文件"}},[t._v("#")]),t._v(" 1.4 合并文件")]),t._v(" "),e("ul",[e("li",[t._v("合并图片（css sprites）、CSS和JS文件合并、CSS和JS文件压缩。")]),t._v(" "),e("li",[e("strong",[t._v("压缩合并css和js可以减少网站http请求的次数，但合并文件可能会带来问题:首屏渲染和缓存失效问题")]),t._v("。那该如何处理这问题呢？----公共库合并和不同页面的合并。")]),t._v(" "),e("li",[t._v("合并方式\n"),e("ul",[e("li",[t._v("使用nodejs实现文件合并(gulp、fis3)")])])])]),t._v(" "),e("h3",{attrs:{id:"_1-5-webpack-性能调优与-gzip-原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-webpack-性能调优与-gzip-原理"}},[t._v("#")]),t._v(" 1.5 webpack 性能调优与 Gzip 原理")]),t._v(" "),e("h4",{attrs:{id:"_1-5-1-构建过程提速"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-1-构建过程提速"}},[t._v("#")]),t._v(" 1.5.1 构建过程提速")]),t._v(" "),e("h5",{attrs:{id:"_1-5-1-1-不要让loader做太多事情"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-1-1-不要让loader做太多事情"}},[t._v("#")]),t._v(" 1.5.1.1 不要让loader做太多事情")]),t._v(" "),e("ul",[e("li",[t._v("include, exclude, 为loader添加相应的参数")])]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("module")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("rules")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\.js$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("exclude")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("(node_modules|bower_components)")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("use")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("loader")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'babel-loader?cacheDirectory=true'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("options")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("presets")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@babel/preset-env'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("h5",{attrs:{id:"_1-5-1-2-不要放过第三方库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-1-2-不要放过第三方库"}},[t._v("#")]),t._v(" 1.5.1.2 不要放过第三方库")]),t._v(" "),e("ul",[e("li",[t._v("使用 DllPlugin 代替 CommonsChunkPlugin，这个依赖库不会跟着业务代码一起被在重新打包，只有当依赖自身发生版本变化时才会重新打包。")])]),t._v(" "),e("h5",{attrs:{id:"_1-5-1-3-happypack"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-1-3-happypack"}},[t._v("#")]),t._v(" 1.5.1.3 Happypack")]),t._v(" "),e("ul",[e("li",[t._v("Happypack会充分利用CPU多核并发的优势，将任务分解给多个子进程进行并发执行，提高打包效率。")]),t._v(" "),e("li",[t._v("相反，webpack是单线程的。")])]),t._v(" "),e("h4",{attrs:{id:"_1-5-2-构建结果体积压缩"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-2-构建结果体积压缩"}},[t._v("#")]),t._v(" 1.5.2 构建结果体积压缩")]),t._v(" "),e("blockquote",[e("p",[t._v("webpack4 现在已经默认使用 uglifyjs-webpack-plugin 对代码做压缩了——在 webpack4 中，我们是通过配置 optimization.minimize 与 optimization.minimizer 来自定义压缩相关的操作的。")])]),t._v(" "),e("ul",[e("li",[t._v("tree-shaking 适用于处理模块级别的冗余代码。\n"),e("ul",[e("li",[t._v("基于 import/export 语法，Tree-Shaking 可以在编译的过程中获悉哪些模块并没有真正被使用，这些没用的代码，在最后打包的时候会被去除。")])])])]),t._v(" "),e("h5",{attrs:{id:"_1-5-2-1-按需加载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-2-1-按需加载"}},[t._v("#")]),t._v(" 1.5.2.1 按需加载")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("output")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/../dist'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("filename")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'app.js'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("publicPath")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" defaultSettings"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("publicPath"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定 chunkFilename")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("chunkFilename")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[name].[chunkhash:5].chunk.js'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("div",{staticClass:"language-react line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const getComponent => (location, cb) {\n  require.ensure([], (require) => {\n    cb(null, require('../pages/BugComponent').default)\n  }, 'bug')\n},\n\n<Route path=\"/bug\" getComponent={getComponent}>\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("h4",{attrs:{id:"_1-5-3-gzip-http压缩"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-3-gzip-http压缩"}},[t._v("#")]),t._v(" 1.5.3 Gzip - HTTP压缩")]),t._v(" "),e("blockquote",[e("p",[t._v("HTTP压缩就是以缩小体积为目的，对HTTP内容进行重新编码的过程。")])]),t._v(" "),e("ul",[e("li",[t._v("只要不是1k、2k的小文件，压缩和解压的时间开销，相比传输过程节省下来的时间开销，是微不足道的。")]),t._v(" "),e("li",[t._v("Gzip压缩后通常能减少响应70%左右的大小。")]),t._v(" "),e("li",[t._v("压缩原理：在文本文件中找出重复出现的字符串，并临时替换它们，从而使整个文件变小。")]),t._v(" "),e("li",[t._v("Gzip压缩是服务器的活，如果服务器了解到有Gzip的需求，则会启动CPU去完成任务，故若存在大量压缩需求，服务器也是扛不住的。因此，Webpack中的Gzip压缩就是为了在构建过程中做一部分服务器的工作，为服务器分压。")])]),t._v(" "),e("h2",{attrs:{id:"二、非核心代码异步加载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、非核心代码异步加载"}},[t._v("#")]),t._v(" 二、非核心代码异步加载")]),t._v(" "),e("p",[t._v("加快首屏响应速度。")]),t._v(" "),e("h3",{attrs:{id:"_2-1-异步加载的方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-异步加载的方式"}},[t._v("#")]),t._v(" 2.1 异步加载的方式")]),t._v(" "),e("h4",{attrs:{id:"_2-1-1-动态脚本加载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-动态脚本加载"}},[t._v("#")]),t._v(" 2.1.1 动态脚本加载")]),t._v(" "),e("p",[t._v("在还没定义defer和async前，异步加载的方式是动态创建script。")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("addScriptTag")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("src")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" script "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    script"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAttribute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text/javascript"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    script"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" src"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("script"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \nwindow"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onload")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("addScriptTag")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"js/index.js"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("h4",{attrs:{id:"_2-1-2-defer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2-defer"}},[t._v("#")]),t._v(" 2.1.2 defer")]),t._v(" "),e("ol",[e("li",[t._v("立即下载，延迟执行（HTML解析完之后才会执行）。")]),t._v(" "),e("li",[t._v("按照加载的顺序依次执行js文件。")]),t._v(" "),e("li",[t._v("兼容所有浏览器。")])]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script src"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./defer.js"')]),t._v(" defer"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h4",{attrs:{id:"_2-1-3-async"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-3-async"}},[t._v("#")]),t._v(" 2.1.3 async")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("立即下载，立即执行。")])]),t._v(" "),e("li",[e("p",[t._v("执行顺序和加载顺序无关。(谁先加载完就执行谁)")])]),t._v(" "),e("li",[e("p",[t._v("HTmL5新增特性，在IE<=9时不支持。")])]),t._v(" "),e("li",[e("p",[t._v("仅适用于外部脚本。")])])]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script src"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./async.js"')]),t._v(" async"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h3",{attrs:{id:"_2-2-异步加载的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-异步加载的区别"}},[t._v("#")]),t._v(" 2.2 异步加载的区别")]),t._v(" "),e("p",[e("img",{attrs:{src:a(669),alt:"异步加载"}})]),t._v(" "),e("p",[t._v("其中蓝色线代表网络读取，红色线代表执行时间，这俩都是针对脚本的；绿色线代表 HTML 解析。")]),t._v(" "),e("ul",[e("li",[t._v("最稳妥的办法还是把"),e("code",[t._v("<script>")]),t._v("写在"),e("code",[t._v("<body>")]),t._v("底部，没有兼容性问题，没有白屏问题，没有执行顺序问题。")]),t._v(" "),e("li",[t._v("当JS与DOM元素和其他脚本依赖关系不强时，可以选用async；当JS依赖于DOM元素和其他脚本的执行结果时，可以选用defer。")])]),t._v(" "),e("h2",{attrs:{id:"三、浏览器缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、浏览器缓存"}},[t._v("#")]),t._v(" 三、浏览器缓存")]),t._v(" "),e("p",[t._v("提升再次次访问速度，减少服务器压力。")]),t._v(" "),e("p",[e("strong",[t._v("缓存")]),t._v("：资源文件（比如图片）在"),e("strong",[t._v("本地的硬盘")]),t._v("里存有副本，浏览器下次请求的时候，可能直接从本地磁盘里读取，而不会重新请求图片的url。")]),t._v(" "),e("blockquote",[e("h4",{attrs:{id:"缓存的机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缓存的机制"}},[t._v("#")]),t._v(" 缓存的机制")]),t._v(" "),e("p",[e("strong",[t._v("强制缓存优先于协商缓存进行，若强制缓存(Expires和Cache-Control)生效则直接使用缓存，若不生效则进行协商缓存(Last-Modified / If-Modified-Since和Etag / If-None-Match)，协商缓存由服务器决定是否使用缓存，若协商缓存失效，则重新获取请求结果，再存入浏览器缓存中；生效则返回304，继续使用缓存")]),t._v("。")])]),t._v(" "),e("p",[e("img",{attrs:{src:a(670),alt:"缓存机制"}})]),t._v(" "),e("h3",{attrs:{id:"_3-1-强缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-强缓存"}},[t._v("#")]),t._v(" 3.1 强缓存")]),t._v(" "),e("p",[e("strong",[t._v("强缓存")]),t._v("：不用请求服务器，直接使用本地的缓存。")]),t._v(" "),e("p",[t._v("在chrome控制台的network选项中可以看到该请求返回200的状态码，并且size显示from disk cache或from memory cache。")]),t._v(" "),e("p",[t._v("**强缓存是利用 http 响应头中的"),e("code",[t._v("Expires")]),t._v("或"),e("code",[t._v("Cache-Control")]),t._v("实现的。**若命中强缓存，则浏览器直接从缓存中获取资源，不会与服务器发生通信。")]),t._v(" "),e("p",[t._v("浏览器第一次请求一个资源时，服务器在返回该资源的同时，会把上面这两个属性放在response header中。")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Response Headers\n\tExpires Expires:Thu, 21 Jan 2017 23:2=39:02 GMT\n\tCache-Control:max-age=3600\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("注意")]),t._v("：这两个response header属性可以只启用一个，也可以同时启用。当response header中，Expires和Cache-Control同时存在时，"),e("strong",[t._v("Cache-Control的优先级高于Expires")]),t._v("。")]),t._v(" "),e("h4",{attrs:{id:"_3-1-1-expires"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1-expires"}},[t._v("#")]),t._v(" 3.1.1 Expires")]),t._v(" "),e("p",[t._v("服务器返回的"),e("strong",[t._v("绝对时间")]),t._v("。")]),t._v(" "),e("p",[t._v("http1.0的产物。浏览器再次请求这个资源时，先从缓存中寻找，找到这个资源后，拿出它的Expires跟当前的请求时间比较，如果请求时间在Expires的时间之前，就能命中缓存，否则就不行。")]),t._v(" "),e("p",[t._v("如果缓存没有命中，浏览器直接从服务器请求资源时，Expires Header在重新请求的时候会被更新。")]),t._v(" "),e("p",[e("strong",[t._v("缺点：")])]),t._v(" "),e("p",[t._v("由于"),e("code",[t._v("Expires")]),t._v("是服务器返回的一个绝对时间，存在的问题是：服务器的时间和客户端的时间可能不一致。在服务器时间与客户端时间相差较大时，缓存管理容易出现问题。")]),t._v(" "),e("p",[t._v("所以，在http1.1中，提出了一个新的response header，就是Cache-Control。")]),t._v(" "),e("h4",{attrs:{id:"_3-1-2-cache-control"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-cache-control"}},[t._v("#")]),t._v(" 3.1.2 Cache-Control")]),t._v(" "),e("p",[t._v("服务器返回的"),e("strong",[t._v("相对时间")]),t._v("。（单位秒）")]),t._v(" "),e("p",[t._v("http1.1中新增的 response header。浏览器第一次请求资源之后，在接下来的相对时间之内，都可以利用本地缓存。超出相对事件则重新请求时，"),e("code",[t._v("Cache-Control")]),t._v("会被更新。")]),t._v(" "),e("h4",{attrs:{id:"_3-1-3-应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3-应用"}},[t._v("#")]),t._v(" 3.1.3 应用")]),t._v(" "),e("p",[t._v("对于有大量静态资源的网页，一定要利用强缓存，提高响应速度。通常的做法是，为这些静态资源全部配置一个超时时间超长的Expires或Cache-Control，比如京东首页缓存的资源，它的缓存过期时间都设置到了2026年。")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("cache-control: max-age=3600, s-maxage=31536000\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("ul",[e("li",[t._v("s-maxage的优先级比max-age高，如果s-maxage未过期，则向代理服务器请求其缓存内容。")]),t._v(" "),e("li",[t._v("s-maxmessage仅在代理服务器中生效，客户端只考虑max-age。")])]),t._v(" "),e("h4",{attrs:{id:"_3-1-4-其他"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-4-其他"}},[t._v("#")]),t._v(" 3.1.4 其他")]),t._v(" "),e("h5",{attrs:{id:"_3-1-4-1-public-与-private"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-4-1-public-与-private"}},[t._v("#")]),t._v(" 3.1.4.1 public 与 private")]),t._v(" "),e("ul",[e("li",[t._v("public\n"),e("ul",[e("li",[t._v("可被浏览器和代理服务器缓存")])])]),t._v(" "),e("li",[t._v("private\n"),e("ul",[e("li",[t._v("默认值")]),t._v(" "),e("li",[t._v("仅被浏览器缓存")])])])]),t._v(" "),e("h3",{attrs:{id:"_3-2-协商缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-协商缓存"}},[t._v("#")]),t._v(" 3.2 协商缓存")]),t._v(" "),e("p",[e("strong",[t._v("协商缓存")]),t._v("：")]),t._v(" "),e("ol",[e("li",[t._v("当浏览器请求某资源时，发现超出了强缓存设置的时间，就会发出请求到服务器，询问是否从缓存中读取资源。")]),t._v(" "),e("li",[t._v("服务器会根据这个请求的request header的一些参数来判断是否命中协商缓存，如果命中，则返回"),e("strong",[t._v("304")]),t._v("状态码并带上新的response header通知浏览器从缓存中读取资源。")])]),t._v(" "),e("ul",[e("li",[t._v("协商缓存需要与cache-control共同使用。")])]),t._v(" "),e("h4",{attrs:{id:"_3-2-1-last-modified、if-modified-since"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-last-modified、if-modified-since"}},[t._v("#")]),t._v(" 3.2.1 Last-Modified、If-Modified-Since")]),t._v(" "),e("p",[t._v("过程如下：")]),t._v(" "),e("p",[t._v("（1）浏览器首次请求资源时，服务器在返回这个资源的同时，会加上"),e("code",[t._v("Last-Modified")]),t._v("这个 response header，表示这该资源在服务器上的最后修改时间。")]),t._v(" "),e("p",[t._v("（2）浏览器再次请求这个资源时，会加上"),e("code",[t._v("If-Modified-Since")]),t._v("这个 request header，即上一次返回的"),e("code",[t._v("Last-Modified")]),t._v("的值。")]),t._v(" "),e("p",[t._v("（3）服务器收到第二次请求时，会比对浏览器传过来的"),e("code",[t._v("If-Modified-Since")]),t._v("和资源在服务器上的最后修改时间"),e("code",[t._v("Last-Modified")]),t._v("，判断资源是否有变化。如果没有变化则返回304 Not Modified，但不返回资源内容（此时，服务器"),e("strong",[t._v("不会返回 Last-Modified")]),t._v(" ）；如果有变化，就正常返回资源内容（继续重复整个流程）。")]),t._v(" "),e("p",[t._v("（4）浏览器如果收到304的响应，就会从缓存中加载资源。")]),t._v(" "),e("p",[t._v("优点：")]),t._v(" "),e("p",[t._v("这样保证不向客户端重复发出资源，也保证当服务器有变化时，客户端能够得到最新的资源。一个304响应比一个静态资源通常小得多，这样就节省了网络带宽。")]),t._v(" "),e("p",[e("strong",[t._v("缺点：")])]),t._v(" "),e("p",[e("code",[t._v("Last-Modified")]),t._v("、"),e("code",[t._v("If-Modified-Since")]),t._v("一般来说都是非常可靠的，但面临的问题是：")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("服务器上的资源变化了，但是最后的修改时间却没有变化")]),t._v("。\n"),e("ul",[e("li",[t._v("如果服务器端在一秒内修改文件两次，但产生的"),e("code",[t._v("Last-Modified")]),t._v("却只有一个值。")])])]),t._v(" "),e("li",[e("strong",[t._v("文件修改时间改了，但文件内容却没有变")])])]),t._v(" "),e("p",[t._v("这一对header就无法解决这种情况。")]),t._v(" "),e("h4",{attrs:{id:"_3-2-2-etag、if-none-match"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-etag、if-none-match"}},[t._v("#")]),t._v(" 3.2.2 ETag、If-None-Match")]),t._v(" "),e("p",[t._v("根据文件内容是否修改来决定缓存策略。")]),t._v(" "),e("p",[t._v("ETag（Entity Tag）：被请求变量的实体值。")]),t._v(" "),e("p",[t._v("过程如下：")]),t._v(" "),e("p",[t._v("（1）浏览器第一次请求一个资源，服务器在返回这个资源的同时，会加上"),e("code",[t._v("ETag")]),t._v("这个 response header，是服务器根据当前请求的资源生成的"),e("strong",[t._v("唯一标识")]),t._v("。这个唯一标识是一个字符串，只要资源有变化这个串就不同，跟最后修改时间无关。")]),t._v(" "),e("p",[t._v("（2）浏览器再次请求这个资源时，会加上"),e("code",[t._v("If-None-Match")]),t._v("这个 request header，即上一次返回的"),e("code",[t._v("ETag")]),t._v("的值。")]),t._v(" "),e("p",[t._v("3）服务器第二次请求时，会对比浏览器传过来的"),e("code",[t._v("If-None-Match")]),t._v("和服务器重新生成的一个新的"),e("code",[t._v("ETag")]),t._v("，判断资源是否有变化。如果没有变化则返回304 Not Modified，但不返回资源内容（此时，由于"),e("strong",[t._v("ETag重新生成过")]),t._v("，response header中还会把这个ETag返回，即使这个ETag并无变化）。如果有变化，就正常返回资源内容（继续重复整个流程）。")]),t._v(" "),e("p",[t._v("（4）浏览器如果收到304的响应，就会从缓存中加载资源。")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("两者之间对比")]),t._v("：")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("精确度上，Etag要优于Last-Modified")]),t._v("。Last-Modified的时间单位是秒，如果某个文件在1秒内改变了多次，那么他们的Last-Modified其实并没有体现出来修改，但是Etag每次都会改变确保了精度；如果是负载均衡的服务器，各个服务器生成的Last-Modified也有可能不一致。")]),t._v(" "),e("li",[e("strong",[t._v("性能上，Etag要逊于Last-Modified")]),t._v("，毕竟Last-Modified只需要记录时间，而Etag需要服务器通过算法来计算出一个hash值。")]),t._v(" "),e("li",[e("strong",[t._v("优先级上，服务器校验优先考虑Etag")]),t._v("。")])])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://www.cnblogs.com/lyzg/p/5125934.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器缓存知识小结及应用"),e("OutboundLink")],1),t._v("[荐]")])])]),t._v(" "),e("h3",{attrs:{id:"_3-2-用户行为对浏览器缓存的影响"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-用户行为对浏览器缓存的影响"}},[t._v("#")]),t._v(" 3.2 用户行为对浏览器缓存的影响")]),t._v(" "),e("p",[t._v("1.地址栏访问，链接跳转是正常用户行为，将会触发浏览器缓存机制；")]),t._v(" "),e("p",[t._v("2.F5刷新，浏览器会设置max-age=0，跳过强缓存判断，会进行协商缓存判断；")]),t._v(" "),e("p",[t._v("3.ctrl+F5刷新，跳过强缓存和协商缓存，直接从服务器拉取资源。")]),t._v(" "),e("h2",{attrs:{id:"四、cdn"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四、cdn"}},[t._v("#")]),t._v(" 四、CDN")]),t._v(" "),e("p",[t._v("提升用户的访问速度，还能节省服务器的带宽消耗，降低负载。")]),t._v(" "),e("blockquote",[e("p",[t._v("对于首次访问的加速，我们需要从网络层面进行优化，最常见的手段就是CDN（Content Delivery Network，内容分发网络）加速。"),e("strong",[t._v("通过将静态资源(例如javascript，css，图片等等）缓存到离用户很近的相同网络运营商的CDN节点上。")])])]),t._v(" "),e("p",[e("img",{attrs:{src:a(671),alt:"CDN"}})]),t._v(" "),e("p",[e("strong",[t._v("当请求达到CDN节点后，节点会判断自己的内容缓存是否有效")]),t._v("。如果有效，则立即响应缓存内容给用户，从而加快响应速度。如果CDN节点的缓存失效，它会根据服务配置去我们的内容源服务器获取最新的资源响应给用户，并将内容缓存下来以便响应给后续访问的用户。")]),t._v(" "),e("p",[e("strong",[t._v("一个地区内只要有一个用户先加载资源，在CDN中建立了缓存，该地区的其他后续用户都能因此而受益")]),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"五、dns"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#五、dns"}},[t._v("#")]),t._v(" 五、DNS")]),t._v(" "),e("h3",{attrs:{id:"_5-1-dns预解析-dns-prefetch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-dns预解析-dns-prefetch"}},[t._v("#")]),t._v(" 5.1 DNS预解析（dns-prefetch）")]),t._v(" "),e("p",[t._v("通过 DNS 预解析来告诉浏览器未来我们可能从某个特定的 URL 获取资源，当浏览器真正使用到该域中的某个资源时就可以尽快地完成 DNS 解析。")]),t._v(" "),e("p",[e("strong",[t._v("DNS 请求需要的带宽非常小，但是延迟却有点高，这点在手机网络上特别明显。DNS预解析 能让延迟明显减少一些，例如用户点击链接时。在某些情况下，延迟能减少一秒钟。")])]),t._v(" "),e("p",[e("strong",[t._v("最明显的例子，DNS预解析在某个页面中包含非常多的域名非常有效，如搜索结果页。")])]),t._v(" "),e("h4",{attrs:{id:"_5-1-1-第一步-打开或关闭dns预解析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-1-第一步-打开或关闭dns预解析"}},[t._v("#")]),t._v(" 5.1.1 "),e("strong",[t._v("第一步")]),t._v("：打开或关闭DNS预解析")]),t._v(" "),e("ol",[e("li",[t._v("方式一：服务器端发送 X-DNS-Prefetch-Control 报头。")]),t._v(" "),e("li",[t._v("方式二：")])]),t._v(" "),e("div",{staticClass:"language-html line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- http-equiv 属性可用于模拟一个 HTTP 响应头 --\x3e")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 强制打开浏览器的预解析 --\x3e")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("http-equiv")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("x-dns-prefetch-control"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("on"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[t._v("在一些高级浏览器中，页面中所有的超链接（"),e("code",[t._v("<a>")]),t._v("标签），默认打开了DNS预解析。")]),t._v(" "),e("p",[t._v("但是，"),e("strong",[t._v("如果页面中采用的https协议，很多浏览器是默认关闭了超链接的DNS预解析")]),t._v("，防止窃听者根据DNS Prefetching推断显示在HTTPS页面中超链接的主机名。")]),t._v(" "),e("h4",{attrs:{id:"_5-1-2-第二步-对指定的域名进行dns预解析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-2-第二步-对指定的域名进行dns预解析"}},[t._v("#")]),t._v(" 5.1.2 "),e("strong",[t._v("第二步")]),t._v("：对指定的域名进行DNS预解析")]),t._v(" "),e("p",[t._v("如果我们将来可能从 smyhvae.com 获取图片或音频资源，那么可以在文档顶部的 标签中加入以下内容：")]),t._v(" "),e("div",{staticClass:"language-html line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("dns-prefetch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://www.smyhvae.com/"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("当我们从该 URL 请求一个资源时，就不再需要等待 DNS 解析的过程。该技术对使用第三方资源特别有用。")]),t._v(" "),e("p",[t._v("参考链接：")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"http://bubkoo.com/2015/11/19/prefetching-preloading-prebrowsing/",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端性能优化 - 资源预加载"),e("OutboundLink")],1),t._v("[荐]")])]),t._v(" "),e("blockquote",[e("ul",[e("li",[e("p",[t._v("我们在请求一些静态资源文件的时候，经常都会将这些静态资源放到二级域名下去请求访问。比如"),e("a",{attrs:{href:"http://www.4399.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("www.4399.com"),e("OutboundLink")],1),t._v("请求static.4399.com/j/main.js，是为了")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("cookie隔离，减少主域进行http请求时携带的cookie。")])]),t._v(" "),e("li",[e("p",[t._v("方便静态资源做CDN加速。")])])])]),t._v(" "),e("li",[e("p",[t._v("放置于独立域名下更加安全，防止非法人员进行随意引用。")])])])]),t._v(" "),e("h3",{attrs:{id:"_5-2-dns缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-dns缓存"}},[t._v("#")]),t._v(" 5.2 DNS缓存")]),t._v(" "),e("blockquote",[e("p",[t._v("参考教程: "),e("a",{attrs:{href:"https://juejin.im/entry/5d171f3be51d45773d46865d",target:"_blank",rel:"noopener noreferrer"}},[t._v("一文搞懂DNS缓存"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=r.exports}}]);