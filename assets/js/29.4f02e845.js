(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{661:function(t,s,a){t.exports=a.p+"assets/img/CSRF-1.14d3f9f5.jpg"},662:function(t,s,a){t.exports=a.p+"assets/img/CSRF.adee47f4.png"},859:function(t,s,a){"use strict";a.r(s);var r=a(17),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,r=t._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"安全策略"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#安全策略"}},[t._v("#")]),t._v(" 安全策略")]),t._v(" "),r("p",[t._v("[TOC]")]),t._v(" "),r("h2",{attrs:{id:"一、csrf"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一、csrf"}},[t._v("#")]),t._v(" 一、CSRF")]),t._v(" "),r("h3",{attrs:{id:"_1-1-基本概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-基本概念"}},[t._v("#")]),t._v(" 1.1 基本概念")]),t._v(" "),r("p",[t._v("CSRF（Cross-site request forgery）："),r("strong",[t._v("跨站请求伪造")]),t._v("。")]),t._v(" "),r("h3",{attrs:{id:"_1-2-攻击方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-攻击方式"}},[t._v("#")]),t._v(" 1.2 攻击方式")]),t._v(" "),r("p",[r("img",{attrs:{src:a(661),alt:"CSRF原理"}})]),t._v(" "),r("p",[r("img",{attrs:{src:a(662),alt:"CSRF"}})]),t._v(" "),r("p",[t._v("用户是网站A的注册用户，且登录进去，于是网站A就给用户下发cookie。")]),t._v(" "),r("p",[t._v("从上图可以看出，要完成一次CSRF攻击，受害者必须满足两个必要的条件：")]),t._v(" "),r("p",[t._v("（1）登录受信任网站A，并在本地生成Cookie。（如果用户没有登录网站A，那么网站B在诱导的时候，请求网站A的api接口时，会提示你登录）")]),t._v(" "),r("p",[t._v("（2）在不登出A的情况下，访问危险网站B（其实是利用了网站A的漏洞）。")]),t._v(" "),r("p",[r("strong",[t._v("cookie保证了用户可以处于登录状态，但网站B其实拿不到 cookie。")])]),t._v(" "),r("h3",{attrs:{id:"_1-3-防御措施"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-防御措施"}},[t._v("#")]),t._v(" 1.3 防御措施")]),t._v(" "),r("h4",{attrs:{id:"_1-3-1-token验证-用的最多"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-1-token验证-用的最多"}},[t._v("#")]),t._v(" 1.3.1 Token验证（用的最多）")]),t._v(" "),r("p",[t._v("（1）服务器发送给客户端一个token；")]),t._v(" "),r("p",[t._v("（2）客户端提交的表单中带着这个token。")]),t._v(" "),r("p",[t._v("（3）如果这个 token 不合法，那么服务器拒绝这个请求。")]),t._v(" "),r("h4",{attrs:{id:"_1-3-2-隐藏令牌"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-2-隐藏令牌"}},[t._v("#")]),t._v(" 1.3.2 隐藏令牌")]),t._v(" "),r("p",[t._v("把 token 隐藏在 http 的 head头中，就是比Token验证隐蔽些。")]),t._v(" "),r("h4",{attrs:{id:"_1-3-3-referer验证"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-3-referer验证"}},[t._v("#")]),t._v(" 1.3.3 Referer验证")]),t._v(" "),r("p",[t._v("Referer 指的是页面请求来源。意思是，"),r("strong",[t._v("只接受本站的请求，服务器才做响应")]),t._v("；如果不是，就拦截。")]),t._v(" "),r("p",[t._v("设置成“"),r("strong",[t._v("SameSite=Strict")]),t._v('”可以严格限定Cookie不能随着跳转链接跨站发送，而“SameSite=Lax"则略宽松一点，允许GET/HEAD等安全方法，但禁止POST跨贴发送。')]),t._v(" "),r("h2",{attrs:{id:"二、xss"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二、xss"}},[t._v("#")]),t._v(" 二、XSS")]),t._v(" "),r("h3",{attrs:{id:"_2-1-基本概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-基本概念"}},[t._v("#")]),t._v(" 2.1 基本概念")]),t._v(" "),r("p",[t._v("XSS（Cros-site Scripting）："),r("strong",[t._v("跨域脚本攻击")]),t._v("。")]),t._v(" "),r("h3",{attrs:{id:"_2-2-攻击方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-攻击方式"}},[t._v("#")]),t._v(" 2.2 攻击方式")]),t._v(" "),r("p",[t._v("不需要你做任何的登录认证，它会通过合法的操作（比如在url中输入、在评论框中输入），"),r("strong",[t._v("向页面注入脚本")]),t._v("（可能是js、hmtl代码块等）。")]),t._v(" "),r("p",[t._v("最后导致的结果可能是：")]),t._v(" "),r("ul",[r("li",[t._v("盗用Cookie\n"),r("ul",[r("li",[t._v("document.cookie读写cookie")])])]),t._v(" "),r("li",[t._v("破坏页面的正常结构，插入广告等恶意内容")]),t._v(" "),r("li",[t._v("D-doss攻击")])]),t._v(" "),r("h4",{attrs:{id:"_2-2-1-反射型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-反射型"}},[t._v("#")]),t._v(" 2.2.1 反射型")]),t._v(" "),r("p",[t._v("发出请求时，XSS代码出现在url中，作为输入提交到服务器端，服务器端解析后响应，XSS代码随响应内容一起传回给浏览器，最后浏览器解析执行XSS代码。这个过程像一次反射，所以叫反射型XSS。")]),t._v(" "),r("h4",{attrs:{id:"_2-2-2-存储型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-存储型"}},[t._v("#")]),t._v(" 2.2.2 存储型")]),t._v(" "),r("p",[t._v("存储型XSS和反射型XSS的差别在于，提交的代码会存储在服务器端（数据库、内存、文件系统等），下次请求时目标页面时不用再提交XSS代码。")]),t._v(" "),r("h3",{attrs:{id:"_2-3-防御措施"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-防御措施"}},[t._v("#")]),t._v(" 2.3 防御措施")]),t._v(" "),r("p",[t._v("首先是encode，如果是富文本，就白名单。")]),t._v(" "),r("h4",{attrs:{id:"_2-3-1-编码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-1-编码"}},[t._v("#")]),t._v(" 2.3.1 编码")]),t._v(" "),r("h4",{attrs:{id:"_2-3-2-过滤"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-2-过滤"}},[t._v("#")]),t._v(" 2.3.2 过滤")]),t._v(" "),r("ul",[r("li",[t._v("移除用户输入的和事件相关的属性。如onerror可以自动触发攻击，还有onclick等。（总而言是，过滤掉一些不安全的内容）")]),t._v(" "),r("li",[t._v("移除用户输入的Style节点、Script节点、Iframe节点。（尤其是Script节点，它可是支持跨域的呀，一定要移除）。")])]),t._v(" "),r("div",{staticClass:"language-js line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 过滤XSS")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("FilterXss")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("content")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" elem "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    elem"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerText "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" content"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" elem"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTML"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    elem "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[t._v("1")]),r("br"),r("span",{staticClass:"line-number"},[t._v("2")]),r("br"),r("span",{staticClass:"line-number"},[t._v("3")]),r("br"),r("span",{staticClass:"line-number"},[t._v("4")]),r("br"),r("span",{staticClass:"line-number"},[t._v("5")]),r("br"),r("span",{staticClass:"line-number"},[t._v("6")]),r("br"),r("span",{staticClass:"line-number"},[t._v("7")]),r("br"),r("span",{staticClass:"line-number"},[t._v("8")]),r("br")])]),r("h4",{attrs:{id:"_2-3-3-校正"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-3-校正"}},[t._v("#")]),t._v(" 2.3.3 校正")]),t._v(" "),r("ul",[r("li",[t._v("避免直接对"),r("code",[t._v("HTML Entity")]),t._v("进行解码。")]),t._v(" "),r("li",[t._v("使用"),r("code",[t._v("DOM Parse")]),t._v("转换，校正不配对的DOM标签。")])]),t._v(" "),r("p",[t._v("备注：我们应该去了解一下"),r("code",[t._v("DOM Parse")]),t._v("这个概念，它的作用是把文本解析成DOM结构。")]),t._v(" "),r("p",[r("strong",[t._v("比较常用的做法是，通过第一步的编码转成文本，然后第三步转成DOM对象，然后经过第二步的过滤。")])]),t._v(" "),r("h4",{attrs:{id:"_2-3-4-httponly"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-4-httponly"}},[t._v("#")]),t._v(" 2.3.4 HttpOnly")]),t._v(" "),r("ul",[r("li",[t._v("表明此cookie只能通过浏览器HTTP协议传输，禁止其他方式访问。")]),t._v(" "),r("li",[t._v("浏览器的JS引擎就会禁用"),r("strong",[t._v("document.cookie")]),t._v("等一切相关API，脚本攻击也就无从谈起了。")])]),t._v(" "),r("h2",{attrs:{id:"三、csrf和xss的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三、csrf和xss的区别"}},[t._v("#")]),t._v(" 三、CSRF和XSS的区别")]),t._v(" "),r("p",[t._v("区别一：")]),t._v(" "),r("ul",[r("li",[t._v("CSRF：需要用户先登录网站A，获取 cookie。")]),t._v(" "),r("li",[t._v("XSS：不需要登录。")])]),t._v(" "),r("p",[t._v("区别二：（原理的区别）")]),t._v(" "),r("ul",[r("li",[t._v("CSRF：是利用网站A本身的漏洞，去请求网站A的api。")]),t._v(" "),r("li",[t._v("XSS：是向网站 A 注入 JS代码，然后执行 JS 里的代码，篡改网站A的内容。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);