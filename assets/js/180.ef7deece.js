(window.webpackJsonp=window.webpackJsonp||[]).push([[180],{842:function(a,s,t){"use strict";t.r(s);var r=t(17),_=Object(r.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"作用域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#作用域"}},[a._v("#")]),a._v(" 作用域")]),a._v(" "),t("p",[a._v("定义：一套用于确定何处以及何处查找变量的规则。")]),a._v(" "),t("p",[a._v("[TOC]")]),a._v(" "),t("h2",{attrs:{id:"一、查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、查询"}},[a._v("#")]),a._v(" 一、查询")]),a._v(" "),t("h3",{attrs:{id:"_1-1-lhs查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-lhs查询"}},[a._v("#")]),a._v(" 1.1 LHS查询")]),a._v(" "),t("p",[a._v("查找用来对变量进行赋值")]),a._v(" "),t("p",[a._v("非严格模式：如果在全局作用域中无法找到目标变量，则会在全局作用域中创建具有该名称的变量。")]),a._v(" "),t("p",[a._v("严格模式：不创建全局变量，只返回ReferenceError异常。")]),a._v(" "),t("h3",{attrs:{id:"_1-2-rhs查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-rhs查询"}},[a._v("#")]),a._v(" 1.2 RHS查询")]),a._v(" "),t("p",[a._v("获取变量的值")]),a._v(" "),t("p",[a._v("找不到变量就抛出ReferenceError错误")]),a._v(" "),t("p",[a._v("查询到变量，但对变量的值进行了不合理的操作，则抛出TypeError错误")]),a._v(" "),t("h3",{attrs:{id:"_1-3-小练习"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-小练习"}},[a._v("#")]),a._v(" 1.3 小练习")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("foo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("a")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" a"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("foo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br")])]),t("p",[a._v("LHS查询有3处：c=...; a=2（隐式变量分配）;b=...")]),a._v(" "),t("p",[a._v("RHS查询有4处：foo(2); =a; a...; b...")]),a._v(" "),t("ul",[t("li",[a._v("编译器有话说：当变量出现在赋值操作的左侧时进行 LHS 查询，出现在右侧时进行 RHS 查询。\n"),t("ul",[t("li",[a._v("讲得更准确一点， RHS 查询与简单地查找某个变量的值别无二致，而 LHS 查询则是试图找到变量的容器本身，从而可以对其赋值。")]),a._v(" "),t("li",[a._v("从这个角度说， RHS 并不是真正意义上的“赋值操作的右侧”， 更准确地说是“非左侧”。")])])])]),a._v(" "),t("h2",{attrs:{id:"二、作用域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、作用域"}},[a._v("#")]),a._v(" 二、作用域")]),a._v(" "),t("blockquote",[t("p",[a._v("域：空间、范围、区域……")]),a._v(" "),t("p",[a._v("作用：读、写")])]),a._v(" "),t("ul",[t("li",[a._v("script是域\n"),t("ul",[t("li",[a._v("全局变量、全局函数")]),a._v(" "),t("li",[a._v("自上而下（单线程）")])])]),a._v(" "),t("li",[a._v("函数是域\n"),t("ul",[t("li",[a._v("局部域")])])]),a._v(" "),t("li",[a._v("{}是域")])]),a._v(" "),t("h3",{attrs:{id:"_2-1-词法作用域-lexical-scoping"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-词法作用域-lexical-scoping"}},[a._v("#")]),a._v(" 2.1 "),t("strong",[a._v("词法作用域（lexical scoping）")])]),a._v(" "),t("ul",[t("li",[a._v("在定义时确定，就是写代码的时候。")]),a._v(" "),t("li",[a._v("不在乎何时何地被调用，只关心函数被声明时所处的位置。")])]),a._v(" "),t("h3",{attrs:{id:"_2-2-动态作用域-dynamic-scoping"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-动态作用域-dynamic-scoping"}},[a._v("#")]),a._v(" 2.2 "),t("strong",[a._v("动态作用域（dynamic scoping）")])]),a._v(" "),t("ul",[t("li",[a._v("在调用时确定，就是代码运行的时候。")]),a._v(" "),t("li",[a._v("不在乎如何声明以及在任何处声明的，只关心何处调用。")])]),a._v(" "),t("h3",{attrs:{id:"_2-3-浏览器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-浏览器"}},[a._v("#")]),a._v(" 2.3 浏览器")]),a._v(" "),t("p",[a._v("JS解析器：先编译后执行")]),a._v(" "),t("h4",{attrs:{id:"_2-3-1-编译器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-1-编译器"}},[a._v("#")]),a._v(" 2.3.1 编译器")]),a._v(" "),t("p",[a._v("执行第一步：找一些东西，但不会读取。JS预解析。")]),a._v(" "),t("h4",{attrs:{id:"_2-3-2-引擎"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-2-引擎"}},[a._v("#")]),a._v(" 2.3.2 引擎")]),a._v(" "),t("p",[a._v("执行第二步：逐行解读代码。")]),a._v(" "),t("p",[a._v("表达式：= + - * / % ++ -- ! 参数……")]),a._v(" "),t("p",[a._v("表达式可以修改预解析的值！函数声明不会改变预解析的值")])])}),[],!1,null,null,null);s.default=_.exports}}]);